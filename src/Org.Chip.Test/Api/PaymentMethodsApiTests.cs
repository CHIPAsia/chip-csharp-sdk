
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.Chip.Client;
using Org.Chip.Api;
// uncomment below to import models
//using Org.Chip.Model;

namespace Org.Chip.Test.Api
{
    /// <summary>
    ///  Class for testing PaymentMethodsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PaymentMethodsApiTests : IDisposable
    {
        private PaymentMethodsApi instance;

        private Guid guid = new Guid("a0da394b-0e3c-4002-956f-e02b47341db6");

        public PaymentMethodsApiTests()
        {
            Configuration config = new Configuration();
            config.BasePath = "https://gate.chip-in.asia/api/v1/";
            config.Test = true;
            instance = new PaymentMethodsApi(config);
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PaymentMethodsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            Assert.IsType<PaymentMethodsApi>(instance);
        }

        /// <summary>
        /// Test PaymentMethods
        /// </summary>
        [Fact]
        [Obsolete]
        public void PaymentMethodsTest()
        {
            String currency = "EUR";
            try
            {
                instance.PaymentMethods(guid.ToString(), currency);
            }
            catch (ApiException e)
            {
                Assert.Equal("GET", e.RestRequest.Method.ToString());
                Assert.Contains("/payment_methods/", e.RestRequest.Resource);

                Parameter brandParam = e.RestRequest.Parameters.FirstOrDefault(x => x.Name == "brand_id");
                Assert.NotNull(brandParam);
                Assert.Equal(guid.ToString(), brandParam.Value);

                Parameter currencyParam = e.RestRequest.Parameters.FirstOrDefault(x => x.Name == "currency");
                Assert.NotNull(currencyParam);
                Assert.Equal(currency, currencyParam.Value);
            }
        }
    }
}
